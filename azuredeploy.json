{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "defaultValue" : "contosoAgentVault",
      "metadata": {
        "description": "A name for the key vault used to store your enterprise's DID private keys."
      },
      "minLength": 2
    },
    "keyVaultSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Specifies whether the key vault is a standard vault or a premium vault."
      }
    },
     "storageAccountName": {
        "type": "string",
        "defaultValue": "contosoenterpriseagent",
        "metadata": {
          "description": "The Azure blob storage account to be created for storing enterprise agent logs and config."
        },
        "minLength": 2
    },
    "storageNameforIdHub": {
      "type": "string",
      "defaultValue": "enterprise-agent-config",
      "metadata": {
        "description": "The name of the blob container to store enterprise agent configuration files."
      },
      "minLength": 2
    },
    "roleAssignmentName": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "A unique ID for the role assignment granting access to Azure blob storage"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue" : "contoso-enterprise-agent-service-plan",
      "metadata": {
        "description": "A name for the app service plan that will be created for your enterprise agent."
      },
      "minLength": 2
    },
    "sku":{
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "S1",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "demoWebAppName": {
      "type": "string",
      "defaultValue" : "contoso-enterprise-agent",
      "metadata": {
        "description": "A name for the demo web app for the enterprise agent."
      },
      "minLength": 2
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/dstrockis/did-enterprise-agent.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      },
      "minLength": 2
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      },
      "minLength": 2
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2017-08-01",
      "kind": "app",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "kind": "app",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AZURE_STORAGE_ACCOUNT",
              "value": "[parameters('storageAccountName')]"
            },
            {
              "name": "AZURE_STORAGE_CONTAINER",
              "value": "[parameters('containerName')]"
            },
            {
              "name": "AZURE_KEY_VAULT",
              "value": "[parameters('keyVaultName')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"
      ],
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[reference(parameters('webAppName'), '2018-11-01', 'Full').identity.tenantId]",
            "objectId": "[reference(parameters('webAppName'), '2018-11-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "sign",
                "create"
              ]
            }
          },
          {
            "tenantId": "[reference(parameters('webAppName'), '2018-11-01', 'Full').identity.tenantId]",
            "objectId": "35ab19de-f9d5-4373-9dc8-7bb66c009050",
            "permissions": {
              "keys": [
                "get",
                "list"
              ]
            }
          }
        ],
        "sku": {
          "name": "[parameters('keyVaultSkuName')]",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      }
    },
    {
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "accessTier": "Hot"
      },
      "resources": [
        {
          "name": "[concat('default/', parameters('containerName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
          ]
        }
      ]
    },
    {
      "name": "[parameters('roleAssignmentName')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(parameters('webAppName'), '2018-11-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    }
  ]
}
